spring:
  profiles: cloud

server.port: 8080

security:
  ignored: /rest/open,/*.js,/sdoc.jsp,/api-docs,/api-docs/default/*,/images/*,/lib/*,/css/*,/v2/api-docs

spring.oauth2:
  client:
    accessTokenUri: ${vcap.services.sso.credentials.tokenUri}
    userAuthorizationUri: ${vcap.services.sso.credentials.authorizationUri}
    clientId: ${vcap.services.sso.credentials.clientId}
    clientSecret: ${vcap.services.sso.credentials.clientSecret}

  resource:
    id: tap
    jwt:
      keyUri: ${vcap.services.sso.credentials.tokenKey}
    userInfoUri: ${vcap.services.sso.credentials.userInfoUri}
  check_token: ${vcap.services.sso.credentials.checkTokenUri}
uaaUri: ${vcap.services.sso.credentials.uaaUri}

logging:
  level:
    org.springframework.security: DEBUG
    org.trustedanalytics: DEBUG

cloudera:
  store: ${cloudera.truststore:}
  storePassword: ${cloudera.truststore.password:}


endpoints.enabled: false
endpoints.health.enabled: true
spring.datasource.platform: cloud
spring.jpa.database: POSTGRESQL
spring.datasource: platform=postgres
spring.jpa.show-sql: true
spring.jpa.hibernate.ddl-auto: ""
spring.database.driverClassName: org.postgresql.Driver
spring.datasource.url: jdbc:postgresql://${db.hostname}:${db.port}/${db.name}
spring.datasource.username: ${db.username}
spring.datasource.password: ${db.password}

---

spring:
  profiles: local

server.port: 8080

security:
  ignored: /rest/**,/rest/test,/console/**,/console,/test,/**,/*.js,/sdoc.jsp,/api-docs,/api-docs/default/*,/images/*,/lib/*,/css/*,/v2/api-docs

logging:
  level:
    org.springframework.security: DEBUG
    org.trustedanalytics: DEBUG

spring.oauth2:
  client:
    accessTokenUri: ${vcap.services.sso.credentials.tokenUri}
    userAuthorizationUri: ${vcap.services.sso.credentials.authorizationUri}
    clientId: ${vcap.services.sso.credentials.clientId}
    clientSecret: ${vcap.services.sso.credentials.clientSecret}

  resource:
    id: cloud_controller
    jwt:
      keyUri: ${vcap.services.sso.credentials.tokenKey}
    userInfoUri: ${vcap.services.sso.credentials.userInfoUri}
  check_token: ${vcap.services.sso.credentials.checkTokenUri}



endpoints.enabled: false
endpoints.health.enabled: true

spring.datasource.platform: cloud
spring.jpa.database: POSTGRESQL
spring.datasource: platform=postgres
spring.jpa.show-sql: true
spring.jpa.hibernate.ddl-auto: ""
spring.database.driverClassName: org.postgresql.Driver
spring.datasource.url: " ${postgres.jdbc.string}"
spring.datasource.username: postgres
spring.datasource.password: postgres


