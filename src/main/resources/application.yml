# Copyright (c) 2017 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

spring:
  profiles: cloud

server.port: 8080

security:
  ignored: /rest/open,/*.js,/sdoc.jsp,/api-docs,/api-docs/default/*,/images/*,/lib/*,/css/*,/v2/api-docs,/health,/info

spring.oauth2:
  client:
    accessTokenUri: ${vcap.services.sso.credentials.tokenUri}
    userAuthorizationUri: ${vcap.services.sso.credentials.authorizationUri}
    clientId: ${vcap.services.sso.credentials.clientId}
    clientSecret: ${vcap.services.sso.credentials.clientSecret}

  resource:
    id: tap
    jwt:
      keyUri: ${vcap.services.sso.credentials.tokenKey}
    userInfoUri: ${vcap.services.sso.credentials.userInfoUri}
  check_token: ${vcap.services.sso.credentials.checkTokenUri}
uaaUri: ${vcap.services.sso.credentials.uaaUri}

logging:
  level:
    org.springframework.security: DEBUG
    org.trustedanalytics: DEBUG

cloudera:
  store: ${cloudera.truststore:}
  storePassword: ${cloudera.truststore.password:}


endpoints.enabled: false
endpoints.health.enabled: true
endpoints.info.enabled: true
endpoints.info.sensitive: false
spring.datasource.platform: cloud
spring.jpa.database: POSTGRESQL
spring.datasource: platform=postgres
spring.jpa.show-sql: true
spring.jpa.hibernate.ddl-auto: ""
spring.database.driverClassName: org.postgresql.Driver
spring.datasource.url: jdbc:postgresql://${db.hostname}:${db.port}/${db.name}
spring.datasource.username: ${db.username}
spring.datasource.password: ${db.password}

# http://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-endpoints.html#production-ready-application-info-git
management:
  info:
    git:
      mode: full

# http://docs.spring.io/spring-boot/docs/current/reference/html/howto-build.html#howto-build-info
info:
  name: "@project.artifactId@"
  app_version: "@project.version@"
  build:
    group: "@project.groupId@"
    artifact: "@project.artifactId@"
    version: "@project.version@"
    name: "@project.name@"
    time: "@build.time@"

---

spring:
  profiles: local

server.port: 8080

security:
  ignored: /rest/**,/rest/test,/console/**,/console,/test,/**,/*.js,/sdoc.jsp,/api-docs,/api-docs/default/*,/images/*,/lib/*,/css/*,/v2/api-docs,/health

logging:
  level:
    org.springframework.security: DEBUG
    org.trustedanalytics: DEBUG

spring.oauth2:
  client:
    accessTokenUri: ${vcap.services.sso.credentials.tokenUri}
    userAuthorizationUri: ${vcap.services.sso.credentials.authorizationUri}
    clientId: ${vcap.services.sso.credentials.clientId}
    clientSecret: ${vcap.services.sso.credentials.clientSecret}

  resource:
    id: cloud_controller
    jwt:
      keyUri: ${vcap.services.sso.credentials.tokenKey}
    userInfoUri: ${vcap.services.sso.credentials.userInfoUri}
  check_token: ${vcap.services.sso.credentials.checkTokenUri}



endpoints.enabled: false
endpoints.health.enabled: true

spring.datasource.platform: cloud
spring.jpa.database: POSTGRESQL
spring.datasource: platform=postgres
spring.jpa.show-sql: true
spring.jpa.hibernate.ddl-auto: ""
spring.database.driverClassName: org.postgresql.Driver
spring.datasource.url: " ${postgres.jdbc.string}"
spring.datasource.username: postgres
spring.datasource.password: postgres


